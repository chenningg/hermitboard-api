// Code generated by ent, DO NOT EDIT.

package assetclass

import (
	"fmt"
	"time"

	"github.com/chenningg/hermitboard-api/hbtype"
	"github.com/oklog/ulid/v2"
	ulid "github.com/oklog/ulid/v2"
)

const (
	// Label holds the string label denoting the assetclass type in the database.
	Label = "asset_class"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldClass holds the string denoting the class field in the database.
	FieldClass = "class"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeAssets holds the string denoting the assets edge name in mutations.
	EdgeAssets = "assets"
	// Table holds the table name of the assetclass in the database.
	Table = "asset_classes"
	// AssetsTable is the table that holds the assets relation/edge.
	AssetsTable = "assets"
	// AssetsInverseTable is the table name for the Asset entity.
	// It exists in this package in order to avoid circular dependency with the "asset" package.
	AssetsInverseTable = "assets"
	// AssetsColumn is the table column denoting the assets relation/edge.
	AssetsColumn = "asset_asset_class"
)

// Columns holds all SQL columns for assetclass fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldClass,
	FieldDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() ulid.ULID
)

// ClassValidator is a validator for the "class" field enum values. It is called by the builders before save.
func ClassValidator(c hbtype.AssetClass) error {
	switch c.String() {
	case "CashOrCashEquivalent", "Commodity", "Cryptocurrency", "Equity", "FixedIncome", "Future", "RealEstate":
		return nil
	default:
		return fmt.Errorf("assetclass: invalid enum value for class field: %q", c)
	}
}
