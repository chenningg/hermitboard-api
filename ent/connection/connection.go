// Code generated by ent, DO NOT EDIT.

package connection

import (
	"time"

	"github.com/chenningg/hermitboard-api/pulid"
)

const (
	// Label holds the string label denoting the connection type in the database.
	Label = "connection"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAccessToken holds the string denoting the access_token field in the database.
	FieldAccessToken = "access_token"
	// FieldRefreshToken holds the string denoting the refresh_token field in the database.
	FieldRefreshToken = "refresh_token"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// EdgeAccount holds the string denoting the account edge name in mutations.
	EdgeAccount = "account"
	// EdgePortfolios holds the string denoting the portfolios edge name in mutations.
	EdgePortfolios = "portfolios"
	// Table holds the table name of the connection in the database.
	Table = "connections"
	// AccountTable is the table that holds the account relation/edge.
	AccountTable = "connections"
	// AccountInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountInverseTable = "accounts"
	// AccountColumn is the table column denoting the account relation/edge.
	AccountColumn = "account_id"
	// PortfoliosTable is the table that holds the portfolios relation/edge. The primary key declared below.
	PortfoliosTable = "portfolio_connections"
	// PortfoliosInverseTable is the table name for the Portfolio entity.
	// It exists in this package in order to avoid circular dependency with the "portfolio" package.
	PortfoliosInverseTable = "portfolios"
)

// Columns holds all SQL columns for connection fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldAccessToken,
	FieldRefreshToken,
	FieldAccountID,
}

var (
	// PortfoliosPrimaryKey and PortfoliosColumn2 are the table columns denoting the
	// primary key for the portfolios relation (M2M).
	PortfoliosPrimaryKey = []string{"portfolio_id", "connection_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// UpdateDefaultDeletedAt holds the default value on update for the "deleted_at" field.
	UpdateDefaultDeletedAt func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// AccessTokenValidator is a validator for the "access_token" field. It is called by the builders before save.
	AccessTokenValidator func(string) error
	// RefreshTokenValidator is a validator for the "refresh_token" field. It is called by the builders before save.
	RefreshTokenValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() pulid.PULID
)
