// Code generated by ent, DO NOT EDIT.

package source

import (
	"time"

	"github.com/chenningg/hermitboard-api/pulid"
)

const (
	// Label holds the string label denoting the source type in the database.
	Label = "source"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIcon holds the string denoting the icon field in the database.
	FieldIcon = "icon"
	// EdgeConnections holds the string denoting the connections edge name in mutations.
	EdgeConnections = "connections"
	// EdgeSourceType holds the string denoting the source_type edge name in mutations.
	EdgeSourceType = "source_type"
	// Table holds the table name of the source in the database.
	Table = "sources"
	// ConnectionsTable is the table that holds the connections relation/edge.
	ConnectionsTable = "connections"
	// ConnectionsInverseTable is the table name for the Connection entity.
	// It exists in this package in order to avoid circular dependency with the "connection" package.
	ConnectionsInverseTable = "connections"
	// ConnectionsColumn is the table column denoting the connections relation/edge.
	ConnectionsColumn = "source_id"
	// SourceTypeTable is the table that holds the source_type relation/edge.
	SourceTypeTable = "sources"
	// SourceTypeInverseTable is the table name for the SourceType entity.
	// It exists in this package in order to avoid circular dependency with the "sourcetype" package.
	SourceTypeInverseTable = "source_types"
	// SourceTypeColumn is the table column denoting the source_type relation/edge.
	SourceTypeColumn = "source_type_sources"
)

// Columns holds all SQL columns for source fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldIcon,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "sources"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"source_type_sources",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// UpdateDefaultDeletedAt holds the default value on update for the "deleted_at" field.
	UpdateDefaultDeletedAt func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// IconValidator is a validator for the "icon" field. It is called by the builders before save.
	IconValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() pulid.PULID
)
