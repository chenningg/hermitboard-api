scalar SessionID

type Session {
    id: SessionID!
    userID: ID!
    authRoles: [AuthRoleValue!]!
}

input LoginToAccountInput {
    username: String!
    password: String!
}

input LoginToStaffAccountInput {
    username: String!
    password: String!
}

type LoginToAccountPayload {
    account: Account!
    session: Session!
}

type LoginToStaffAccountPayload {
    staffAccount: StaffAccount!
    session: Session!
}

type CreateAccountPayload {
    account: Account!
    session: Session!
}

type CreateStaffAccountPayload {
    staffAccount: StaffAccount!
    session: Session!
}

type Mutation {
    createAccount(input: CreateAccountInput!): CreateAccountPayload!
    createStaffAccount(input: CreateStaffAccountInput!): CreateStaffAccountPayload!
    loginToAccount(input: LoginToAccountInput!): LoginToAccountPayload!
    loginToStaffAccount(input: LoginToStaffAccountInput!): LoginToStaffAccountPayload!
    logout: Void
}